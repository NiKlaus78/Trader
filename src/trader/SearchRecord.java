/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trader;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.function.Function;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author suraj
 */
public class SearchRecord extends javax.swing.JFrame {
    Connection cn;       String sql;	
        ResultSet rs;        PreparedStatement prstm;

        int c=0;
        DefaultTableModel model;
    /**
     * Creates new form AddRecord
     */
    public SearchRecord() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }
    public void close(){
        WindowEvent we = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
    }
    
    public void clearData1(){
        Date date = null;
        chdate.setDate(date);
        chdate1.setDate(date);
        chname.setText("");
        chpay.setText("");
        chdetails.setText("");
        chstatus.setSelectedItem("select");
        chapprove.setSelectedItem("select");
    }
    public void clearData(){
        Date date = null;
         chdate.setDate(date);
         chdate1.setDate(date);
         chname.setText("");
         cnt.setText("");
         chpay.setText("");
         chdetails.setText("");
         chstatus.setSelectedItem("select");
         chapprove.setSelectedItem("select");
         recordtable.setModel(new DefaultTableModel(null, new String[]{"Approval_Date","Client_Name" ,"Details" ,"Payment_Status","Payment"}));
    }
    public void count()
    {
        try{
            if(chdate.getDate() != null || !chname.getText().isEmpty() || chapprove.getSelectedItem().equals("Select"))
            {
                if(chname.getText().isEmpty() && chapprove.getSelectedItem().equals("Select")){
                    SimpleDateFormat Date_Format = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                    String dob = Date_Format.format(chdate.getDate()); 
                    SimpleDateFormat Date_Format1 = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                    String dob1 = Date_Format1.format(chdate1.getDate()); 
                    sql = "select count(*) from record where Arrival_Date between '"+dob+"' and '"+dob1+"'";
                    System.out.println("p"+sql);
                }
                else if(chdate.getDate() == null && chdate1.getDate() == null && chapprove.getSelectedItem().equals("Select")){
                    String nam;
                    nam = chname.getText();
                    sql = "select count(*) from record where Client_Name = '"+nam+"'";
                    System.out.println("s"+sql);
                }
                else if(chdate.getDate() == null && chdate1.getDate() == null && chname.getText().isEmpty()){
                    String stat = chapprove.getSelectedItem().toString();
                    sql = "select count(*) from record where Approval = '"+stat+"'";
                    System.out.println("s"+sql);
                }
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Trade","root", "3003");
                prstm = cn.prepareStatement(sql);
                rs = prstm.executeQuery();
                if(rs.last()) { 
                    int c = rs.getRow();
                    String ct = String.valueOf(c);
                    cnt.setText(ct);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Please Input Details to Search");
            }
        }
        catch (Exception e) {
                System.out.println(e);
                //JOptionPane.showMessageDialog(null, e);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        chname = new javax.swing.JTextField();
        chdate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chdetails = new javax.swing.JTextArea();
        chstatus = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        chpay = new javax.swing.JTextField();
        approv = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        recordtable = new javax.swing.JTable();
        count = new javax.swing.JLabel();
        cnt = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        chapprove = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        approv1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        chdate1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Om Traders");

        jLabel3.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel3.setText("Client Name:");

        chname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chnameActionPerformed(evt);
            }
        });
        chname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chnameKeyTyped(evt);
            }
        });

        chdate.setDateFormatString("d-MM-y");
        chdate.setFont(new java.awt.Font("HP Simplified Light", 1, 12)); // NOI18N
        chdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chdateMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chdateMouseExited(evt);
            }
        });
        chdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chdateKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chdateKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel1.setText("Date_From:");

        jLabel4.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel4.setText("Details:");

        chdetails.setColumns(20);
        chdetails.setRows(5);
        chdetails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chdetailsKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(chdetails);

        chstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Unpaid", "Paid", " " }));

        jLabel5.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel5.setText("Payment Status:");

        jLabel2.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel2.setText("Payment:");

        chpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chpayActionPerformed(evt);
            }
        });
        chpay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chpayKeyTyped(evt);
            }
        });

        approv.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        approv.setForeground(new java.awt.Color(0, 102, 102));
        approv.setText("Approve");
        approv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 0, 0));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 153, 204));
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        search.setForeground(new java.awt.Color(0, 0, 204));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        recordtable.setBackground(new java.awt.Color(204, 204, 204));
        recordtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Name", "Details", "Payment Status", "Payment"
            }
        ));
        recordtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recordtableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(recordtable);

        count.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        count.setText("Count:");

        cnt.setEditable(false);
        cnt.setBackground(new java.awt.Color(51, 153, 255));
        cnt.setFont(new java.awt.Font("HP Simplified", 3, 18)); // NOI18N
        cnt.setForeground(new java.awt.Color(255, 255, 255));

        update.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        update.setForeground(new java.awt.Color(204, 0, 153));
        update.setText("Pay_Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel6.setText("Approval:");

        chapprove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Approved", "Not Approved", " " }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Approve All");

        approv1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        approv1.setForeground(new java.awt.Color(0, 153, 51));
        approv1.setText("Approve");
        approv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approv1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Approve By Name");

        chdate1.setDateFormatString("d-MM-y");
        chdate1.setFont(new java.awt.Font("HP Simplified Light", 1, 12)); // NOI18N
        chdate1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chdate1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chdate1MouseExited(evt);
            }
        });
        chdate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chdate1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chdate1KeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("HP Simplified", 2, 18)); // NOI18N
        jLabel9.setText("Date_To:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Note : Always Select Approval Before Search");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(chdate, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(chname, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addGap(10, 10, 10)
                .addComponent(chstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(chpay, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(chdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(chapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(cnt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(approv1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(approv, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chpay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(approv1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(approv, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane1.getAccessibleContext().setAccessibleParent(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chnameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chnameActionPerformed

    private void chpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chpayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chpayActionPerformed

    private void approvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvActionPerformed
        // TODO add your handling code here:
        try{ 
            if(chdate.getDate() != null && chdate1.getDate() != null)
            {
                String approval = chapprove.getSelectedItem().toString();
                SimpleDateFormat Date_Format = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                String dob = Date_Format.format(chdate.getDate()); 
                SimpleDateFormat Date_Format1 = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                String dob1 = Date_Format1.format(chdate1.getDate());
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Trade","root", "3003");
                sql = "UPDATE record SET Approval = '"+approval+"' WHERE Arrival_Date between '"+dob+"' and '"+dob1+"'";
                prstm = cn.prepareStatement(sql);
                prstm.execute();
                clearData();
                JOptionPane.showMessageDialog(null, "All Data Approved For '"+dob+"' To '"+dob1+"'");
            }
            else{
                JOptionPane.showMessageDialog(null, "Please Select The Dates to Approve");
            }
            }catch(Exception e){
                System.out.println(e);
                //JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_approvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AdminUI ad = new AdminUI();
                ad.setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chdateMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chdateMouseExited

    private void chdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chdateKeyPressed
        // TODO add your handling code here:        
    }//GEN-LAST:event_chdateKeyPressed

    private void chdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chdateMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chdateMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try { 
                if(chname.getText().isEmpty()){
                    SimpleDateFormat Date_Format = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                    String dob = Date_Format.format(chdate.getDate()); 
                    SimpleDateFormat Date_Format1 = new SimpleDateFormat("dd-MM-yyyy"); //("dd-MM-yyyy hh:mm:ss")
                    String dob1 = Date_Format1.format(chdate1.getDate()); 
                    String Appr = chapprove.getSelectedItem().toString();
                    sql = "select * from record where Arrival_Date between '"+dob+"' and '"+dob1+"' and Approval='"+Appr+"'";
                    //select * from record where Arrival_Date between "07-08-2020" and "15-08-2020" and Approval="Not Approved";
                    System.out.println("p"+sql);
            }
                else if(chdate.getDate() == null && chdate1.getDate() == null && chapprove.getSelectedItem().equals("Select")){
                    String nam;
                    nam = chname.getText();
                    sql = "select * from record where Client_Name = '"+nam+"'";
                    System.out.println("s"+sql);
            }
                else if(chdate.getDate() == null && chdate1.getDate() == null && chname.getText().isEmpty()){
                    String stat = chapprove.getSelectedItem().toString();
                    sql = "select * from record where Approval = '"+stat+"'";
                    System.out.println("s"+sql);
            }
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Trade","root", "3003");
                System.out.println("p"+sql);
                System.out.println(+(c++)+"success2");
                //sql = "SELECT * from record";
                prstm = cn.prepareStatement(sql);
                rs = prstm.executeQuery();
                recordtable.setModel(DbUtils.resultSetToTableModel(rs));
                if(recordtable.getRowCount() <= 0)
                {
                    JOptionPane.showMessageDialog(null, "No Records For This date");
                }
            } catch (Exception e) {
               System.out.println(e);
                //JOptionPane.showMessageDialog(null, e);
            }
            count();
    }//GEN-LAST:event_searchActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        clearData();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            if(!chname.getText().isEmpty())
            {
                String nam = chname.getText();
                String sql1="delete from record where Client_Name = '"+nam+"'";
                Statement st;
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/trade","root", "3003");
                st=cn.createStatement();  
                st.executeUpdate(sql1);
                model =(DefaultTableModel) recordtable.getModel();
                model.removeRow(recordtable.getSelectedRow());
                count();
                clearData1();
            }
            else{
                JOptionPane.showMessageDialog(null,"Please Select Row to delete");
            }
        }
     catch(Exception e)
     {
         System.out.println(e);
         //JOptionPane.showMessageDialog(null,e);
     }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void recordtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordtableMouseClicked
        // TODO add your handling code here:
        model =(DefaultTableModel) recordtable.getModel();
        chname.setText(model.getValueAt( recordtable.getSelectedRow(), 1).toString());
        chdetails.setText(model.getValueAt( recordtable.getSelectedRow(), 2).toString());
        chpay.setText(model.getValueAt( recordtable.getSelectedRow(), 3).toString());
        chstatus.setSelectedItem(model.getValueAt( recordtable.getSelectedRow(), 4).toString());
        chapprove.setSelectedItem(model.getValueAt( recordtable.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_recordtableMouseClicked

    private void chdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chdateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chdateKeyReleased

    private void chnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chnameKeyReleased

    private void chnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chnameKeyTyped
        // TODO add your handling code here:
        if(Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_chnameKeyTyped

    private void chdetailsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chdetailsKeyTyped
        // TODO add your handling code here:
        if(Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_chdetailsKeyTyped

    private void chpayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chpayKeyTyped
        // TODO add your handling code here:
        if(Character.isLetter(evt.getKeyChar()))
            evt.consume();
        if(chpay.getText().length()>=9){  
            evt.consume();
        }
    }//GEN-LAST:event_chpayKeyTyped

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        try{
            if(!chname.getText().isEmpty())
            {
                String stat = chstatus.getSelectedItem().toString(); 
                String nam=chname.getText();
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Trade","root", "3003");
                sql = "UPDATE record SET Payment_status = '"+stat+"' WHERE Client_Name = '"+nam+"'";
                prstm = cn.prepareStatement(sql);
                prstm.execute();
                clearData();
                JOptionPane.showMessageDialog(null, "Payment_Status Updated for '"+nam+"'");
            }else{
                JOptionPane.showMessageDialog(null, "Please Select Row to Update");
            }
            }catch(Exception e){
                System.out.println(e);
                //JOptionPane.showMessageDialog(null, e);
            }
        
    }//GEN-LAST:event_updateActionPerformed

    private void approv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approv1ActionPerformed
        // TODO add your handling code here:
        try{
            if(!chname.getText().isEmpty())
            {
                String nam;
                nam = chname.getText();
                String approval = chapprove.getSelectedItem().toString();
                Class.forName("com.mysql.jdbc.Driver");
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Trade","root", "3003");
                sql = "UPDATE record SET Approval = '"+approval+"' WHERE Client_Name = '"+nam+"'";
                prstm = cn.prepareStatement(sql);
                prstm.execute();
                clearData();
                JOptionPane.showMessageDialog(null, "Data Approval Submitted for '"+nam+"'");
            }
            else{
                JOptionPane.showMessageDialog(null, "Please Select Row to Update");
            }
            }catch(Exception e){
                System.out.println(e);
                //JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_approv1ActionPerformed

    private void chdate1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chdate1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chdate1MouseClicked

    private void chdate1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chdate1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_chdate1MouseExited

    private void chdate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chdate1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_chdate1KeyPressed

    private void chdate1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chdate1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chdate1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            //here you can put the selected theme class name in JTattoo
            UIManager.setLookAndFeel("com.jtattoo.plaf.texture.TextureLookAndFeel");
 
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approv;
    private javax.swing.JButton approv1;
    private javax.swing.JComboBox<String> chapprove;
    private com.toedter.calendar.JDateChooser chdate;
    private com.toedter.calendar.JDateChooser chdate1;
    private javax.swing.JTextArea chdetails;
    private javax.swing.JTextField chname;
    private javax.swing.JTextField chpay;
    private javax.swing.JComboBox<String> chstatus;
    private javax.swing.JTextField cnt;
    private javax.swing.JLabel count;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable recordtable;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
